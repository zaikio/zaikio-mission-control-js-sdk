/*
 * Mission Control
 * This is the documentation of all API endpoints provided by Mission Control.  ## Provided OAuth Scopes - `mission_control.commissionings.r` [`Commissioning`]: Read information of all commissionings - `mission_control.commissionings.w` [`Commissioning`]: Create or update commissioning related models - `mission_control.estimates.r` [`Estimate`]: Read information of all Estimates - `mission_control.estimates.w` [`Estimate`]: Create or update all kinds of Estimates - `mission_control.lists.r` [`List`]: Read information of all List objects - `mission_control.lists.r` [`List`]: Create or update List objects - `mission_control.orders.r` [`Order`]: Read information of all orders - `mission_control.orders.w` [`Order`]: Create or update new orders - `mission_control.jobs.r` [`Job`]: Read basic information of all jobs currently or formerly in production (`GET /jobs/_*`) - `mission_control.jobs.w` [`Job`]: Create or update new jobs (`POST /jobs/_*`, `PATCH /jobs/_*`) 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.36
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Back2} from './Back2';
import {BoxModelRollSegmentChildren} from './BoxModelRollSegmentChildren';
import {Dimensions} from './Dimensions';
import {Front2} from './Front2';
import {Position} from './Position';

/**
 * The BoxModelRollSegment model module.
 * @module model/BoxModelRollSegment
 * @version 1.0.0
 */
export class BoxModelRollSegment {
  /**
   * Constructs a new <code>BoxModelRollSegment</code>.
   * @alias module:model/BoxModelRollSegment
   * @class
   * @param id {String} 
   * @param kind {module:model/BoxModelRollSegment.KindEnum} 
   * @param sides {module:model/BoxModelRollSegment.SidesEnum} 
   * @param dimensions {module:model/Dimensions} 
   * @param position {module:model/Position} 
   * @param front {module:model/Front2} 
   * @param back {module:model/Back2} 
   * @param children {Array.<module:model/BoxModelRollSegmentChildren>} 
   */
  constructor(id, kind, sides, dimensions, position, front, back, children) {
    this.id = id;
    this.kind = kind;
    this.sides = sides;
    this.dimensions = dimensions;
    this.position = position;
    this.front = front;
    this.back = back;
    this.children = children;
  }

  /**
   * Constructs a <code>BoxModelRollSegment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BoxModelRollSegment} obj Optional instance to populate.
   * @return {module:model/BoxModelRollSegment} The populated <code>BoxModelRollSegment</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new BoxModelRollSegment();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('kind'))
        obj.kind = ApiClient.convertToType(data['kind'], 'String');
      if (data.hasOwnProperty('sides'))
        obj.sides = ApiClient.convertToType(data['sides'], 'String');
      if (data.hasOwnProperty('dimensions'))
        obj.dimensions = Dimensions.constructFromObject(data['dimensions']);
      if (data.hasOwnProperty('position'))
        obj.position = Position.constructFromObject(data['position']);
      if (data.hasOwnProperty('front'))
        obj.front = Front2.constructFromObject(data['front']);
      if (data.hasOwnProperty('back'))
        obj.back = Back2.constructFromObject(data['back']);
      if (data.hasOwnProperty('children'))
        obj.children = ApiClient.convertToType(data['children'], [BoxModelRollSegmentChildren]);
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
BoxModelRollSegment.prototype.id = undefined;

/**
 * Allowed values for the <code>kind</code> property.
 * @enum {String}
 * @readonly
 */
BoxModelRollSegment.KindEnum = {
  /**
   * value: "roll_segment"
   * @const
   */
  rollSegment: "roll_segment"
};
/**
 * @member {module:model/BoxModelRollSegment.KindEnum} kind
 */
BoxModelRollSegment.prototype.kind = undefined;

/**
 * Allowed values for the <code>sides</code> property.
 * @enum {String}
 * @readonly
 */
BoxModelRollSegment.SidesEnum = {
  /**
   * value: "one"
   * @const
   */
  one: "one",

  /**
   * value: "headtohead"
   * @const
   */
  headtohead: "headtohead",

  /**
   * value: "headtofoot"
   * @const
   */
  headtofoot: "headtofoot"
};
/**
 * @member {module:model/BoxModelRollSegment.SidesEnum} sides
 */
BoxModelRollSegment.prototype.sides = undefined;

/**
 * @member {module:model/Dimensions} dimensions
 */
BoxModelRollSegment.prototype.dimensions = undefined;

/**
 * @member {module:model/Position} position
 */
BoxModelRollSegment.prototype.position = undefined;

/**
 * @member {module:model/Front2} front
 */
BoxModelRollSegment.prototype.front = undefined;

/**
 * @member {module:model/Back2} back
 */
BoxModelRollSegment.prototype.back = undefined;

/**
 * @member {Array.<module:model/BoxModelRollSegmentChildren>} children
 */
BoxModelRollSegment.prototype.children = undefined;

// Implement BoxModelSignatureLayoutChildren interface:
