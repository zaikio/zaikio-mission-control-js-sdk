/*
 * Mission Control
 * This is the documentation of all API endpoints provided by Mission Control.  ## Provided OAuth Scopes - `mission_control.commissionings.r` [`Commissioning`]: Read information of all commissionings - `mission_control.commissionings.w` [`Commissioning`]: Create or update commissioning related models - `mission_control.estimates.r` [`Estimate`]: Read information of all Estimates - `mission_control.estimates.w` [`Estimate`]: Create or update all kinds of Estimates - `mission_control.lists.r` [`List`]: Read information of all List objects - `mission_control.lists.r` [`List`]: Create or update List objects - `mission_control.orders.r` [`Order`]: Read information of all orders - `mission_control.orders.w` [`Order`]: Create or update new orders - `mission_control.jobs.r` [`Job`]: Read basic information of all jobs currently or formerly in production (`GET /jobs/_*`) - `mission_control.jobs.w` [`Job`]: Create or update new jobs (`POST /jobs/_*`, `PATCH /jobs/_*`) 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The PackagingCreate model module.
 * @module model/PackagingCreate
 * @version 1.0.0
 */
export class PackagingCreate {
  /**
   * Constructs a new <code>PackagingCreate</code>.
   * @alias module:model/PackagingCreate
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>PackagingCreate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PackagingCreate} obj Optional instance to populate.
   * @return {module:model/PackagingCreate} The populated <code>PackagingCreate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PackagingCreate();
      if (data.hasOwnProperty('job_id'))
        obj.jobId = ApiClient.convertToType(data['job_id'], 'String');
      if (data.hasOwnProperty('previous_packaging_id'))
        obj.previousPackagingId = ApiClient.convertToType(data['previous_packaging_id'], 'String');
      if (data.hasOwnProperty('kind'))
        obj.kind = ApiClient.convertToType(data['kind'], 'String');
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {String} jobId
 */
PackagingCreate.prototype.jobId = undefined;

/**
 * The UUID of a packaging which has to be packed into this packaging.
 * @member {String} previousPackagingId
 */
PackagingCreate.prototype.previousPackagingId = undefined;

/**
 * Allowed values for the <code>kind</code> property.
 * @enum {String}
 * @readonly
 */
PackagingCreate.KindEnum = {
  /**
   * value: "addressing"
   * @const
   */
  addressing: "addressing",

  /**
   * value: "banding"
   * @const
   */
  banding: "banding",

  /**
   * value: "boxing"
   * @const
   */
  boxing: "boxing",

  /**
   * value: "counting"
   * @const
   */
  counting: "counting",

  /**
   * value: "filing"
   * @const
   */
  filing: "filing",

  /**
   * value: "franking"
   * @const
   */
  franking: "franking",

  /**
   * value: "shrink_wrapping"
   * @const
   */
  shrinkWrapping: "shrink_wrapping",

  /**
   * value: "wrapping"
   * @const
   */
  wrapping: "wrapping"
};
/**
 * The kind of the packaging
 * @member {module:model/PackagingCreate.KindEnum} kind
 */
PackagingCreate.prototype.kind = undefined;

/**
 * The amount of products to be packed in the chosen kind of the packaging.
 * @member {Number} amount
 */
PackagingCreate.prototype.amount = undefined;

