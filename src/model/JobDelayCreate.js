/*
 * Mission Control
 * This is the documentation of all API endpoints provided by Mission Control.  ## Provided OAuth Scopes - `mission_control.commissionings.r` [`Commissioning`]: Read information of all commissionings - `mission_control.commissionings.w` [`Commissioning`]: Create or update commissioning related models - `mission_control.estimates.r` [`Estimate`]: Read information of all Estimates - `mission_control.estimates.w` [`Estimate`]: Create or update all kinds of Estimates - `mission_control.lists.r` [`List`]: Read information of all List objects - `mission_control.lists.r` [`List`]: Create or update List objects - `mission_control.orders.r` [`Order`]: Read information of all orders - `mission_control.orders.w` [`Order`]: Create or update new orders - `mission_control.jobs.r` [`Job`]: Read basic information of all jobs currently or formerly in production (`GET /jobs/_*`) - `mission_control.jobs.w` [`Job`]: Create or update new jobs (`POST /jobs/_*`, `PATCH /jobs/_*`) 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.36
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The JobDelayCreate model module.
 * @module model/JobDelayCreate
 * @version 1.0.0
 */
export class JobDelayCreate {
  /**
   * Constructs a new <code>JobDelayCreate</code>.
   * @alias module:model/JobDelayCreate
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>JobDelayCreate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/JobDelayCreate} obj Optional instance to populate.
   * @return {module:model/JobDelayCreate} The populated <code>JobDelayCreate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new JobDelayCreate();
      if (data.hasOwnProperty('job_id'))
        obj.jobId = ApiClient.convertToType(data['job_id'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('reason'))
        obj.reason = ApiClient.convertToType(data['reason'], 'String');
      if (data.hasOwnProperty('reported_by_id'))
        obj.reportedById = ApiClient.convertToType(data['reported_by_id'], 'String');
      if (data.hasOwnProperty('reported_at'))
        obj.reportedAt = ApiClient.convertToType(data['reported_at'], 'Date');
      if (data.hasOwnProperty('cleared_by_id'))
        obj.clearedById = ApiClient.convertToType(data['cleared_by_id'], 'String');
      if (data.hasOwnProperty('cleared_at'))
        obj.clearedAt = ApiClient.convertToType(data['cleared_at'], 'Date');
    }
    return obj;
  }
}

/**
 * The ID of the Job related to the delay
 * @member {String} jobId
 */
JobDelayCreate.prototype.jobId = undefined;

/**
 * A description of the delay
 * @member {String} description
 */
JobDelayCreate.prototype.description = undefined;

/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
JobDelayCreate.ReasonEnum = {
  /**
   * value: "machine_unavailable"
   * @const
   */
  machineUnavailable: "machine_unavailable",

  /**
   * value: "materials_unavailable"
   * @const
   */
  materialsUnavailable: "materials_unavailable",

  /**
   * value: "other"
   * @const
   */
  other: "other",

  /**
   * value: "specialist_unavailable"
   * @const
   */
  specialistUnavailable: "specialist_unavailable"
};
/**
 * @member {module:model/JobDelayCreate.ReasonEnum} reason
 */
JobDelayCreate.prototype.reason = undefined;

/**
 * The ID of the Person who first reported the delay
 * @member {String} reportedById
 */
JobDelayCreate.prototype.reportedById = undefined;

/**
 * The date at which the delay was first reported
 * @member {Date} reportedAt
 */
JobDelayCreate.prototype.reportedAt = undefined;

/**
 * The ID of the Person who resolved the delay
 * @member {String} clearedById
 */
JobDelayCreate.prototype.clearedById = undefined;

/**
 * The date at which the delay was resolved
 * @member {Date} clearedAt
 */
JobDelayCreate.prototype.clearedAt = undefined;

