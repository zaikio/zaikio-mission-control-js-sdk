/*
 * Mission Control
 * This is the documentation of all API endpoints provided by Mission Control.  ## Provided OAuth Scopes - `mission_control.commissionings.r` [`Commissioning`]: Read information of all commissionings - `mission_control.commissionings.w` [`Commissioning`]: Create or update commissioning related models - `mission_control.estimates.r` [`Estimate`]: Read information of all Estimates - `mission_control.estimates.w` [`Estimate`]: Create or update all kinds of Estimates - `mission_control.lists.r` [`List`]: Read information of all List objects - `mission_control.lists.r` [`List`]: Create or update List objects - `mission_control.orders.r` [`Order`]: Read information of all orders - `mission_control.orders.w` [`Order`]: Create or update new orders - `mission_control.jobs.r` [`Job`]: Read basic information of all jobs currently or formerly in production (`GET /jobs/_*`) - `mission_control.jobs.w` [`Job`]: Create or update new jobs (`POST /jobs/_*`, `PATCH /jobs/_*`) 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ExtendedShipment} from './ExtendedShipment';
import {Shipment} from './Shipment';

/**
 * The InlineResponse2013 model module.
 * @module model/InlineResponse2013
 * @version 1.0.0
 */
export class InlineResponse2013 extends Shipment {
  /**
   * Constructs a new <code>InlineResponse2013</code>.
   * @alias module:model/InlineResponse2013
   * @class
   * @extends module:model/Shipment
   * @param address {} 
   * @param id {} 
   * @param createdAt {} 
   * @param updatedAt {} 
   * @param references {} The the first reference of this pickup is generated by the system that created it. The references are supposed to be used in customer/human related communication. It is not a technical ID.
   * @param state {} The current state of the object
   * @param costs {} The total costs (that is without taxes) of the shipment in the smallest unit of `currency`. For USD/EUR this would be cents, for GPB pence, etc.
   * @param incoterm {} The incoterm of this Shipment
   * @param carrierKind {} The kind of carrier for this Shipment
   * @param carrierName {} The name of the carrier for this shipment. If `carrier_kind` is set to courier, the name must be one of `dhl`, `dhl_express`, `ups`, `gls`, `dpd`, `tnt`, `go`, `fedex`, `hermes`, `deutsche_post`, `bw_post`, `apc_overnight`, `royal_mail`. If `carrier_kind` is set to forwarder, the name of the forwarder is applicable.
   * @param carrierService {} The booked carrier service for this shipment
   * @param deliveryContactEmail {} The email address of the contact person at the delivery location.
   * @param deliveryContactPhone {} The phone number of the contact person at the delivery location.
   * @param deliveryInstructions {} The delivery instructions for this shipment.
   * @param deliveryRequirements {} The delivery requirements for this Shipment.
   * @param whiteLabel {} Specifies whether the markings indicating the actual sender of the products should be removed before shipping.
   * @param expectedDeliveryAt {} The date on which this shipment should be delivered.
   * @param deliveredAt {} The date on which this shipment was delivered.
   */
  constructor(address, id, createdAt, updatedAt, references, state, costs, incoterm, carrierKind, carrierName, carrierService, deliveryContactEmail, deliveryContactPhone, deliveryInstructions, deliveryRequirements, whiteLabel, expectedDeliveryAt, deliveredAt) {
    super(id, createdAt, updatedAt, references, state, costs, incoterm, carrierKind, carrierName, carrierService, deliveryContactEmail, deliveryContactPhone, deliveryInstructions, deliveryRequirements, whiteLabel, expectedDeliveryAt, deliveredAt);
    this.address = address;
  }

  /**
   * Constructs a <code>InlineResponse2013</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2013} obj Optional instance to populate.
   * @return {module:model/InlineResponse2013} The populated <code>InlineResponse2013</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse2013();
      Shipment.constructFromObject(data, obj);
      if (data.hasOwnProperty('address'))
        obj.address = ApiClient.convertToType(data['address'], Object);
    }
    return obj;
  }
}

/**
 * @member {Object} address
 */
InlineResponse2013.prototype.address = undefined;

